<project name="torch" default="dist" basedir=".">
    <description>
        An implementation of the Fellegi-Sunter matching algorithm.
    </description>

    <!-- set global properties for this build -->
    <property name="src" location="src"/>
    <property name="build" location="build"/>
    <property name="lib" location="lib"/>
    <property name="classpath" value=""/>
    <property name="test-classpath" 
        value="${classpath}:${lib}/junit.jar:${lib}/hamcrest-core.jar" />

    <property name="debug" value="true" />

    <target name="init">
      <!-- Create the build directory structure used by compile -->
      <mkdir dir="${build}"/>
    </target>

    <target name="compile" depends="init"
          description="compile the source " >
      <!-- Compile the java code from ${src} into ${build} -->
      <javac srcdir="${src}" destdir="${build}" classpath="${classpath}"
          includeantruntime="false" debug="${debug}" excludes="gov/census/torch/test/*" />
    </target>

    <target name="compileTests" depends="compile" description="compile unit tests">
        <javac srcdir="${src}" destdir="${build}" classpath="${test-classpath}"
            includeantruntime="false" debug="${debug}" includes="gov/census/torch/test/*" />
    </target>

    <target name="test" depends="compileTests" description="run unit tests">
        <mkdir dir="test_results" />

        <junit printsummary="yes" haltonfailure="yes">
            <classpath>
                <pathelement path="${test-classpath}" />
                <pathelement location="${build}" />
            </classpath>
            <formatter type="plain" />
            
            <batchtest fork="yes" todir="test_results">
                <fileset dir="${build}">
                    <include name="**/*Test*.class" />
                </fileset>
            </batchtest>
        </junit>
    </target>
  
    <target name="extractDeps" depends="init"
        description="extract dependencies from libary jars into the build directory">

        <!-- 
        <unjar src="${lib}/external.jar" dest="${build}">
            <patternset includesfile="external_dependencies" />
        </unjar>
        -->
    </target>

    <target name="copyResources" depends="init"
        description="copy the resources directory to the build directory">
        <copy todir="${build}/gov/census/torch">
            <fileset dir="resources" includes="*.js"/>
        </copy>
    </target>

    <target name="dist" depends="compile,extractDeps,copyResources"
        description="generate the distribution">
      <!-- Put everything in ${build} into the MHSampler.jar file -->
      <jar jarfile="torch.jar" basedir="${build}">
          <manifest>
              <attribute name="Main-Class" value="gov.census.torch.ScriptRunner" />
          </manifest>
      </jar>
    </target>

    <target name="clean"
          description="clean up" >
      <!-- Deletes files created by building the program -->
      <delete dir="${build}"/>
      <delete file="torch.jar"/>
    </target>

</project>
